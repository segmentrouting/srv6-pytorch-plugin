apiVersion: v1
kind: ConfigMap
metadata:
  name: pytorch-distributed-config
data:
  JALAPENO_API_ENDPOINT: "http://jalapeno-api:8000"
  TOPOLOGY_COLLECTION: "fabric_graph"
  BACKEND_INTERFACE: "eth0"
  ROUTE_PLATFORM: "linux"
  ROUTE_TABLE_ID: "254"
  WORLD_SIZE: "4"
  MASTER_PORT: "29500"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pytorch-distributed-training
spec:
  serviceName: "pytorch-distributed"
  replicas: 4  # Number of nodes
  selector:
    matchLabels:
      app: pytorch-distributed
  template:
    metadata:
      labels:
        app: pytorch-distributed
    spec:
      containers:
      - name: pytorch
        image: pytorch-srv6-demo:latest
        command: ["python", "/app/entrypoint.py", "/app/test_plugin.py"]
        envFrom:
        - configMapRef:
            name: pytorch-distributed-config
        env:
        - name: MASTER_ADDR
          value: "pytorch-distributed-training-0.pytorch-distributed"  # First pod's DNS name
        - name: RANK
          valueFrom:
            fieldRef:
              fieldPath: metadata.ordinal  # Pod index becomes the rank
        volumeMounts:
        - name: training-code
          mountPath: /app
      volumes:
      - name: training-code
        configMap:
          name: training-code
---
apiVersion: v1
kind: Service
metadata:
  name: pytorch-distributed
spec:
  clusterIP: None  # Headless service for StatefulSet DNS
  selector:
    app: pytorch-distributed
  ports:
  - port: 29500
    name: nccl 